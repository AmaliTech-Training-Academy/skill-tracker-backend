# skilltracker-services/user-service/docker-compose.yml

services:
  postgres-user:
    container_name: postgres-user-db
    image: postgres:15-alpine
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5332:5432"
    volumes:
      - postgres_user_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
#    networks:
#      - skilltracker-network

  user-service:
    build:
      context: ../../
      dockerfile: skilltracker-services/user-service/Dockerfile
    image: skilltracker/user-service:latest
    container_name: user-service
    ports:
      - "8084:8084"
    environment:
      SERVER_PORT: 8084
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-user:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8082/eureka/
      SPRING_CLOUD_CONFIG_URI: http://config-server:8081
      SPRING_RABBITMQ_HOST: rabbitmq-broker
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_USER}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    depends_on:
      postgres-user:
        condition: service_healthy
    networks:
      - skilltracker-network

networks:
  skilltracker-network:
    external: true

volumes:
  postgres_user_data:
